<?php

namespace App\Actions\ChorusActions;

use Pixelsprout\LaravelChorus\Support\ActionContext;
use Pixelsprout\LaravelChorus\Support\ChorusAction;

final class CreateMessageWithActivityActionSimplified extends ChorusAction
{
    protected function handleWithContext(ActionContext $context): mixed
    {
        $user = auth()->user();

        if (!$user) {
            throw new \Exception('User must be authenticated');
        }

        // Create the message (UUID auto-generated by client)
        $context->create('messages', [
            'user_id' => $user->id,
            'tenant_id' => $user->tenant_id,
        ]);

        // Update user's last activity (handled automatically by the action)
        $context->update('users', [
            'id' => $user->id,
            'last_activity_at' => now(),
        ]);

        // Update platform metrics - needs closure to get platform_id from client
        $context->update('platforms', function($clientData) {
            return [
                'id' => $clientData->id,
                'last_message_at' => now(),
            ];
        });

        return [
            'test_item' => 'test message',
        ];
    }

    public function rules(): array
    {
        return [
            'messages.create' => [
                'id' => 'nullable|string|uuid',
                'body' => 'required|string|max:1000',
                'platform_id' => 'required|string|uuid|exists:platforms,id',
                'user_id' => 'required|string|uuid|exists:users,id',
                'tenant_id' => 'required|integer|exists:tenants,id',
            ],
            'users.update' => [
                'id' => 'required|string|uuid|exists:users,id',
                'last_activity_at' => 'required|date',
            ],
            'platforms.update' => [
                'id' => 'required|string|uuid|exists:platforms,id',
                'last_message_at' => 'nullable|date',
            ],
            'data' => [
                'test_item' => 'required|string',
            ],
        ];
    }
}